module.exports = "#include <id_decl_vert>\n#include <decl_point_size>\n#include <common>\n#include <map_pars_vertex>\n#include <lightmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <wide_lines_decl>\n#include <pack_normals>\n#ifdef USE_INSTANCING\n    #include <instancing_decl_vert>\n#endif\n#if defined( PARTICLE_UV )\nattribute vec4 uvp;\nvarying highp vec4 vUVp;\n#endif\n#if defined (PARTICLE_FLAGS)\nattribute float pointScale;\n#endif\n#if NUM_CUTPLANES > 0\nvarying vec3 vWorldPosition;\n#endif\n#if defined(DEPTH_OCCLUSION) && DEPTH_OCCLUSION == 1\nvarying float vDepthPositionZ;\n#endif\nvoid main() {\n#ifdef USE_INSTANCING\n    vec3 instancePosition = getInstancePos(position);\n    #define position instancePosition\n#endif\n#if defined(USE_ENVMAP) && (defined(UNPACK_NORMALS) || defined(USE_INSTANCE))\n    vec3 correctNormal;\n    #ifdef UNPACK_NORMALS\n        correctNormal = decodeNormal(normal);\n    #else\n        correctNormal = normal;\n    #endif\n    #ifdef USE_INSTANCING\n        correctNormal = getInstanceNormal(correctNormal);\n    #endif\n    #define normal correctNormal\n#endif\n#include <map_vertex>\n#include <lightmap_vertex>\n#include <color_vertex>\n#ifdef USE_ENVMAP\n#include <defaultnormal_vertex>\n#endif\n#include <default_vertex>\n#include <wide_lines_vert>\n#include <worldpos_vertex>\n#if NUM_CUTPLANES > 0\n    vec4 _worldPosition = modelMatrix * vec4( position, 1.0 );\n    vWorldPosition = _worldPosition.xyz;\n#endif\n#if defined(DEPTH_OCCLUSION) && DEPTH_OCCLUSION == 1\n    vec4 _vDepthPosition = modelViewMatrix * vec4( position, 1.0 );\n    vDepthPositionZ = _vDepthPosition.z;\n#endif\n#if defined( PARTICLE_UV )\n    vUVp = uvp;\n#endif\n#include <envmap_vertex>\n#include <id_vert>\n#include <point_size>\n#if defined (PARTICLE_FLAGS) \n    gl_PointSize *= clamp(pointScale, 0.0, 2.0);\n#endif\n}\n";