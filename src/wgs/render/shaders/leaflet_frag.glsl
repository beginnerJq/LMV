module.exports = "#include <common>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <id_decl_frag>\n#include <theming_decl_frag>\n#define ENABLE_ID_DISCARD\nuniform float opacity;\nuniform vec4 selectionColor;\n#if NUM_CUTPLANES>0\nvarying highp vec3 vWorldPosition;\n#endif\n#ifdef VIEWPORT_CLIPPING\nuniform highp vec4 viewportBounds;\nvarying vec4 vPosition;\n#endif\n#include <cutplanes>\nvoid main(){\n    #if NUM_CUTPLANES>0\n        checkCutPlanes(vWorldPosition);\n    #endif\n    \n    #ifdef VIEWPORT_CLIPPING\n    \n    if (vPosition.x < viewportBounds.x || vPosition.x > viewportBounds.z || vPosition.y < viewportBounds.y || vPosition.y > viewportBounds.w) {\n        discard;\n    }\n    #endif\n    \n    float depth = 0.;\n    vec3 geomNormal = vec3(0.);\n    vec3 outgoingLight = vec3(0.);\n    vec4 diffuseColor = vec4(opacity);\n    \n    #include <map_fragment>\n    #include <alphamap_fragment>\n    #include <alphatest_fragment>\n    \n    outgoingLight = diffuseColor.rgb;\n    \n    #include <linear_to_gamma_fragment>\n    \n    gl_FragColor = vec4(outgoingLight, diffuseColor.a);\n    float writeId = 1.0;\n    #ifdef GHOSTED \n        writeId = 0.;\n        gl_FragColor.a *= 0.1;\n    #endif\n    \n    #include <theming_frag>\n    gl_FragColor.rgb = mix(gl_FragColor.rgb, selectionColor.rgb, selectionColor.a);\n    #include <final_frag>\n}\n";